FROM ubuntu:22.04

ENV DEBIAN_FRONTEND=noninteractive
ENV CUDA_HOME=/usr/local/cuda

RUN <<EOF
set -e

apt-get update -y
apt-get install -y software-properties-common
add-apt-repository ppa:deadsnakes/ppa

# Install python3.10 and some other packages
apt-get update -y
apt-get install -y python3.10
apt-get install -y python3-dev gcc ffmpeg python3-pip wget git
apt-get purge --yes python3-distro-info

# Install CUDA 11.8
wget -nv https://developer.download.nvidia.com/compute/cuda/repos/ubuntu2204/x86_64/cuda-ubuntu2204.pin
mv cuda-ubuntu2204.pin /etc/apt/preferences.d/cuda-repository-pin-600
wget -nv https://developer.download.nvidia.com/compute/cuda/11.8.0/local_installers/cuda-repo-ubuntu2204-11-8-local_11.8.0-520.61.05-1_amd64.deb
dpkg -i cuda-repo-ubuntu2204-11-8-local_11.8.0-520.61.05-1_amd64.deb
cp /var/cuda-repo-ubuntu2204-11-8-local/cuda-*-keyring.gpg /usr/share/keyrings/
apt-get update
apt-get -y install cuda
apt-get clean
rm -rf cuda-repo-*.deb

# Setup cudnn
# Install miniconda for cuDNN installation
wget -nv https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh -O miniconda.sh
bash miniconda.sh -b -p /opt/conda
rm miniconda.sh
export PATH="/opt/conda/bin:$PATH"

# Install cuDNN via conda-forge (public repository)
conda install -c conda-forge cudnn=8.9.5.29 -y

# Copy cuDNN files to CUDA directories
cp /opt/conda/lib/libcudnn* /usr/local/cuda/lib64/
cp /opt/conda/include/cudnn*.h /usr/local/cuda/include/
chmod a+r /usr/local/cuda/include/cudnn*.h /usr/local/cuda/lib64/libcudnn*

# Clean up conda installation
rm -rf /opt/conda

# Required to get paddleocr working
wget -nv http://nz2.archive.ubuntu.com/ubuntu/pool/main/o/openssl/libssl1.1_1.1.1f-1ubuntu2.19_amd64.deb
dpkg -i libssl1.1_1.1.1f-1ubuntu2.19_amd64.deb
rm -rf libssl*.deb

rm -rf /var/lib/apt/lists/*

# Install poetry
pip install --no-cache-dir "poetry==1.5.1"
# Dont create virtual env inside container
poetry config virtualenvs.create false
poetry config installer.max-workers 10

EOF

# This is required to make faster-whisper (and probably other ctranslate2 models) work
# Fixes the 'libcudnn_ops_infer.so.8 does not exist' error
ENV LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/usr/local/lib/python3.10/dist-packages/torch/lib
# RUN pip install --no-cache-dir "torch==2.0.0" torchvision torchaudio --index-url https://download.pytorch.org/whl/cu118 &&\
#     pip install --no-cache-dir "vllm==0.1.3"
CMD ["bash"]
